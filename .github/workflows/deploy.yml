name: Deploy
 
on:
  workflow_dispatch:
    inputs:
      DEPLOY_TARGET:
        required: true
        type: choice
        description: Container image to deploy
        options:
        - server/runner
        - server/api
      IMAGE_VERSION:
        required: true
        type: string
        default: latest
      ENVIRONMENT:
        required: true
        type: choice
        description: Environment target
        options: 
        - production
        
jobs:
  server-runner:
    uses: 7egend/workflows/.github/workflows/deploy.yml@main
    if: ${{ inputs.DEPLOY_TARGET == 'server/runner' }}
    with:
      DEPLOYER_IMAGE: ghcr.io/${{ github.repository }}/devops/ansible:latest
      PLAYBOOK: playbooks/${{ inputs.ENVIRONMENT }}/notification-hub/deploy.yaml
      ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
      MICROSERVICE_VARIABLE: notification_hub_runner_docker_image
      #MICROSERVICE_IMAGE: ghcr.io/${{ github.repository }}/server/runner:${{ inputs.IMAGE_VERSION }}
      MICROSERVICE_IMAGE: registry.gitlab.com/7egend/projects/home/microservices/notification-hub/server/runner:${{ inputs.IMAGE_VERSION }}
      KNOWN_HOSTS_FILE: ${{ vars.KNOWN_HOSTS_FILE }}
    secrets:
      CI_BOT_SSH_PRIVATE_KEY: ${{ secrets.CI_BOT_SSH_PRIVATE_KEY }}
      ANSIBLE_VAULT_PASSWORD: ${{ secrets.VAULT_PASSWORD }}
    
  server-api:
    uses: 7egend/workflows/.github/workflows/deploy.yml@main
    if: ${{ inputs.DEPLOY_TARGET == 'server/api' }}
    with:
      DEPLOYER_IMAGE: ghcr.io/${{ github.repository }}/devops/ansible:latest
      PLAYBOOK: playbooks/${{ inputs.ENVIRONMENT }}/notification-hub/deploy.yaml
      ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
      MICROSERVICE_VARIABLE: notification_hub_api_docker_image
      #MICROSERVICE_IMAGE: ghcr.io/${{ github.repository }}/server/api:${{ inputs.IMAGE_VERSION }}
      MICROSERVICE_IMAGE: registry.gitlab.com/7egend/projects/home/microservices/notification-hub/server/api:${{ inputs.IMAGE_VERSION }}
      KNOWN_HOSTS_FILE: ${{ vars.KNOWN_HOSTS_FILE }}
    secrets:
      CI_BOT_SSH_PRIVATE_KEY: ${{ secrets.CI_BOT_SSH_PRIVATE_KEY }}
      ANSIBLE_VAULT_PASSWORD: ${{ secrets.VAULT_PASSWORD }}
