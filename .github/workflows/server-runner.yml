name: Build and deploy server/runner docker image

on:
  workflow_dispatch:
  push:
    branches:    
      - main
    tags:
      - '*.*.*'
    paths:
      - 'server/runner/**'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
      changelog: ${{ steps.set_version.outputs.changelog }}
      actor_email: ${{ steps.set_version.outputs.actor_email }}
      repo_name: ${{ steps.set_version.outputs.repo_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set Version Variable
        id: set_version
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "version=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
            echo ${GITHUB_SHA:0:7}
          elif [[ ${{ github.ref }} == refs/tags/* ]]; then
            echo "version=${{ github.ref }}" >> $GITHUB_OUTPUT
            echo ${{ github.ref }}
          fi
          echo "changelog=$(git log -1 --pretty=%B ${GITHUB_SHA})" >> $GITHUB_OUTPUT
          echo $(git log -1 --pretty=%B ${GITHUB_SHA})
          echo "actor_email=$(git log -n 1 --pretty=format:%ae)" >> $GITHUB_OUTPUT
          echo $(git log -n 1 --pretty=format:%ae)
          echo "repo_name=$(basename ${{ github.repository }})" >> $GITHUB_OUTPUT
          echo $(basename ${{ github.repository }})

  build-image:
    uses: 7egend/workflows/.github/workflows/build-image.yml@main
    permissions: write-all
    secrets: inherit
    with:
      DOCKER_IMAGE_NAME: server/runner
      DOCKERFILE_PATH: server/runner/Dockerfile
      CONTEXT_PATH: .
      CONTAINER_RELEASE_VERSION: ${{ needs.prepare.outputs.version }}
    needs: prepare


  build-other-images:
    uses: 7egend/workflows/.github/workflows/create-tag-image.yml@main
    permissions: write-all
    secrets: inherit
    strategy:
      matrix:
        contexts: [devops/ansible, server/api]
    with:
      DOCKERFILE_PATH: ${{ matrix.contexts }}/Dockerfile
      DOCKER_IMAGE_NAME: ${{ matrix.contexts }}
      CONTAINER_RELEASE_VERSION: ${{ needs.prepare.outputs.version }}
    needs: [prepare, build-image]


  post-new-docker-image-notification:
    uses: 7egend/workflows/.github/workflows/notification-hub-post-new-docker-image.yml@main
    needs: [prepare, build-image, build-other-images]
    secrets: inherit
    with:
      SLACK_CHANNEL: ${{ vars.slack_channel }}
      AUTHOR_NAME: ${{ github.triggering_actor }}
      PROJECT_NAME: ${{ github.repository }}
      RELEASE_TAG: ${{ needs.prepare.outputs.version }}
      RELEASE_CHANGELOG: ${{ github.event.head_commit.message }}
      LINKS_SOURCE_CODE: "${{ github.server_url }}/${{ github.repository }}"
      LINKS_IMAGE: "ghcr.io/${{ github.repository }}/server/runner:${{ needs.prepare.outputs.version }}"


  post-failed-docker-image-notification:
    uses: 7egend/workflows/.github/workflows/notification-hub-post-failed-docker-image.yml@main
    needs: [prepare, build-image, build-other-images]
    secrets: inherit
    if: ${{ needs.build-image.result == 'failure' || needs.build-other-images.result == 'failure' }}
    with:
      SLACK_EMAIL: ${{ needs.prepare.outputs.actor_email }}
      PROJECT_NAME: ${{ github.repository }}
      LINKS_SOURCE_CODE: "${{ github.server_url }}/${{ github.repository }}"
      LINKS_IMAGE: "ghcr.io/${{ github.repository }}/server/runner:${{ needs.prepare.outputs.version }}"
      LINKS_PIPELINE: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      LINKS_REGISTRY: https://github.com/orgs/7egend/packages?repo_name=${{ needs.prepare.outputs.repo_name }}


  deploy-production-notification-hub-runner:
    uses: 7egend/workflows/.github/workflows/deploy.yml@main
    needs: [prepare, build-other-images]
    with:
      DEPLOYER_IMAGE: ghcr.io/${{ github.repository }}/devops/ansible:latest
      PLAYBOOK: playbooks/production/notification-hub/deploy.yaml
      KNOWN_HOSTS_FILE: ${{ vars.KNOWN_HOSTS_FILE }}
      ENVIRONMENT: production
      CONTAINER_RELEASE_VERSION: ${{ needs.prepare.outputs.version }}
    secrets:
      CI_BOT_SSH_PRIVATE_KEY: ${{ secrets.CI_BOT_SSH_PRIVATE_KEY }}
      ANSIBLE_VAULT_PASSWORD: ${{ secrets.VAULT_PASSWORD }}


  post-successful-deployment:
    uses: 7egend/workflows/.github/workflows/notification-hub-post-successful-deployment.yml@main
    needs: [prepare, deploy-production-notification-hub-runner]
    secrets: inherit
    with:
      SLACK_CHANNEL: ${{ vars.slack-channel }}
      AUTHOR_NAME: ${{ github.triggering_actor }}
      CREATED_AT: ${{ github.event.head_commit.timestamp }}
      ENVIRONMENT: production
      PROJECT_NAME: ${{ github.repository }}
      WORKGROUP: ${{ needs.prepare.outputs.repo_name }}
      RELEASE_TAG: ${{ needs.prepare.outputs.version }}
      RELEASE_CHANGELOG: ${{ github.event.head_commit.message }}
      LINKS_SOURCE_CODE: "${{ github.server_url }}/${{ github.repository }}"